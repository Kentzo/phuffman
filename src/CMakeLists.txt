cmake_minimum_required(VERSION 2.8)
project(PHUFFMAN_LIB)

option(OPENCL_ENABLED "OpenCL is enabled" ON)
option(CUDA_ENABLED "nVidia CUDA is enabled" OFF)

set(SRCS phuffman.cpp DepthCounterNode.cpp Code.c Frequency.c CodeTableAdapter.cpp)
set(INCLUDE_FILES ${PHUFFMAN_LIB_SOURCE_DIR}/phuffman.hpp)
set(INCLUDE_INSTALL_SUFFIX include/phuffman)
set(LIBRARY_INSTALL_SUFFIX lib)
include_directories(${PHUFFMAN_LIB_SOURCE_DIR})

if (OPENCL_ENABLED)
  if (UNIX)
    if (APPLE)
      find_library(OPENCL_LIBRARY OpenCL DOC "OpenCL lib for OSX")
      find_path(OPENCL_INCLUDE_DIR OpenCL/cl.h DOC "Include for OpenCL on OSX")
    else (APPLE)
      find_library(OPENCL_LIBRARY OpenCL ENV LD_LIBRARY_PATH DOC "NVIDIA OpenCL lib for Unix-like")
      find_path(OPENCL_INCLUDE_DIR CL/opencl.h $ENV{HOME}/NVIDIA_GPU_Computing_SDK/OpenCL/common/inc DOC "Include for NVIDIA OpenCL on Unix-like")
    endif (APPLE)
  elseif (UNIX)
    if (WIN32)
    elseif (WIN32)
    endif(WIN32)
  endif (UNIX)
  include_directories(${OPENCL_INCLUDE_DIR})

  set(OPENCL_KERNELS ${CMAKE_INSTALL_PREFIX}/${INCLUDE_INSTALL_SUFFIX})
  set(OPENCL_KERNELS_INCLUDE ${CMAKE_INSTALL_PREFIX}/${INCLUDE_INSTALL_SUFFIX}/encoding.cl)
  configure_file(${PHUFFMAN_LIB_SOURCE_DIR}/OpenCL/phuffman_opencl.cpp.in ${PHUFFMAN_LIB_SOURCE_DIR}/OpenCL/phuffman_opencl.cpp)
  file(READ ${PHUFFMAN_LIB_SOURCE_DIR}/OpenCL/phuffman_opencl.hpp OPENCL_HEADER)
  set(SRCS ${SRCS} ${PHUFFMAN_LIB_SOURCE_DIR}/OpenCL/phuffman_opencl.cpp)
  set(INCLUDE_FILES ${INCLUDE_FILES} ${PHUFFMAN_LIB_SOURCE_DIR}/OpenCL/encoding.cl ${PHUFFMAN_LIB_SOURCE_DIR}/Code.h)
  set_source_files_properties(${SRCS} COMPILE_FLAGS -DOPENCL_ENABLED)
endif (OPENCL_ENABLED)

if (CUDA_ENABLED)
  add_subdirectory(CUDA)
  include_directories(${PHUFFMAN_LIB_SOURCE_DIR}/CUDA)
  set_source_files_properties(${SRCS} COMPILE_FLAGS -DCUDA_ENABLED)
endif (CUDA_ENABLED)

configure_file(${PHUFFMAN_LIB_SOURCE_DIR}/phuffman.hpp.in ${PHUFFMAN_LIB_SOURCE_DIR}/phuffman.hpp)
add_library(phuffman STATIC ${SRCS})
target_link_libraries(phuffman ${OPENCL_LIBRARY} ${CUDA_LIBRARY})

install(TARGETS phuffman DESTINATION lib)
install(FILES ${INCLUDE_FILES} DESTINATION include/phuffman)